[{"/Users/ictus/project1/notice-board/client/src/index.js":"1","/Users/ictus/project1/notice-board/client/src/App.js":"2","/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js":"3","/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js":"4","/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js":"5","/Users/ictus/project1/notice-board/client/src/components/Navigation/Navigation.js":"6","/Users/ictus/project1/notice-board/client/src/components/Auth/Auth.js":"7","/Users/ictus/project1/notice-board/client/src/service/auth.js":"8","/Users/ictus/project1/notice-board/client/src/db/token.js":"9","/Users/ictus/project1/notice-board/client/src/components/Banner/Banner.js":"10","/Users/ictus/project1/notice-board/client/src/util/date.js":"11","/Users/ictus/project1/notice-board/client/src/components/Paging/Paging.js":"12","/Users/ictus/project1/notice-board/client/src/components/Map/MapContainer.js":"13","/Users/ictus/project1/notice-board/client/src/components/Map/SearchPlace.js":"14","/Users/ictus/project1/notice-board/client/src/util/GlobalStyles.js":"15","/Users/ictus/project1/notice-board/client/src/routes/Snack/Snack.js":"16","/Users/ictus/project1/notice-board/client/src/routes/Gourmet/Gourmet.js":"17","/Users/ictus/project1/notice-board/client/src/components/Review/Review.js":"18","/Users/ictus/project1/notice-board/client/src/components/Shop/Shop.js":"19","/Users/ictus/project1/notice-board/client/src/components/LoadingSpinner/LoadingSpinner.js":"20","/Users/ictus/project1/notice-board/client/src/components/Map/StaticMap.js":"21","/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js":"22","/Users/ictus/project1/notice-board/client/src/components/Review/ReviewAll.js":"23","/Users/ictus/project1/notice-board/client/src/components/Shop/ShopAll.js":"24","/Users/ictus/project1/notice-board/client/src/components/Board/BoardItem.js":"25","/Users/ictus/project1/notice-board/client/src/components/Board/Board.js":"26","/Users/ictus/project1/notice-board/client/src/components/Rate/Rate.js":"27","/Users/ictus/project1/notice-board/client/src/service/board.js":"28"},{"size":596,"mtime":1640739610157,"results":"29","hashOfConfig":"30"},{"size":4307,"mtime":1640927433631,"results":"31","hashOfConfig":"30"},{"size":3905,"mtime":1640850833688,"results":"32","hashOfConfig":"30"},{"size":7952,"mtime":1641272390659,"results":"33","hashOfConfig":"30"},{"size":1313,"mtime":1640827366900,"results":"34","hashOfConfig":"30"},{"size":960,"mtime":1641184358910,"results":"35","hashOfConfig":"30"},{"size":3425,"mtime":1640745366312,"results":"36","hashOfConfig":"30"},{"size":1272,"mtime":1640746760516,"results":"37","hashOfConfig":"30"},{"size":282,"mtime":1640741407218,"results":"38","hashOfConfig":"30"},{"size":322,"mtime":1638168262305,"results":"39","hashOfConfig":"30"},{"size":759,"mtime":1638228598697,"results":"40","hashOfConfig":"30"},{"size":545,"mtime":1640044390277,"results":"41","hashOfConfig":"30"},{"size":4242,"mtime":1641275261944,"results":"42","hashOfConfig":"30"},{"size":867,"mtime":1640219162770,"results":"43","hashOfConfig":"30"},{"size":2004,"mtime":1641208513145,"results":"44","hashOfConfig":"30"},{"size":387,"mtime":1640739788241,"results":"45","hashOfConfig":"30"},{"size":1317,"mtime":1640921628768,"results":"46","hashOfConfig":"30"},{"size":2163,"mtime":1641193426864,"results":"47","hashOfConfig":"30"},{"size":2557,"mtime":1641193383440,"results":"48","hashOfConfig":"30"},{"size":344,"mtime":1640221108667,"results":"49","hashOfConfig":"30"},{"size":1183,"mtime":1641200094326,"results":"50","hashOfConfig":"30"},{"size":736,"mtime":1640660282233,"results":"51","hashOfConfig":"30"},{"size":377,"mtime":1640927456959,"results":"52","hashOfConfig":"30"},{"size":467,"mtime":1641272367056,"results":"53","hashOfConfig":"30"},{"size":806,"mtime":1641181050095,"results":"54","hashOfConfig":"30"},{"size":3813,"mtime":1641275278357,"results":"55","hashOfConfig":"30"},{"size":1105,"mtime":1641180383755,"results":"56","hashOfConfig":"30"},{"size":1532,"mtime":1640854662259,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1ryfszt",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/ictus/project1/notice-board/client/src/index.js",[],["119","120"],"/Users/ictus/project1/notice-board/client/src/App.js",["121","122","123","124","125","126"],"import Snack from \"./routes/Snack/Snack\";\nimport Read from \"./routes/Read/Read\";\nimport GlobalStyle from './util/GlobalStyles.js';\nimport {BrowserRouter, Link, Route, Routes} from \"react-router-dom\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport Banner from \"./components/Banner/Banner\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport styles from \"./routes/Snack/snack.module.css\";\nimport Auth from \"./components/Auth/Auth\";\nimport Gourmet from \"./routes/Gourmet/Gourmet\";\nimport Home from './routes/Home/Home'\nimport ReviewAll from \"./components/Review/ReviewAll\";\nimport ShopAll from \"./components/Shop/ShopAll\";\n\nfunction App({authService, boardService} ) {\n    const [user, setUser] = useState(undefined)\n    const [banner, setBanner] = useState('')\n    const [isAuth, setIsAuth] = useState(undefined)\n    const [isAlert, setIsAlert] = useState()\n    const [data, setData] = useState();\n\n    const getUser = useCallback(async()=>{\n        try {\n            const user  = await authService.me()\n            setUser(user.data)\n        }\n        catch(error){\n            console.log(error.message)\n        }\n        return user\n    },[user, authService])\n\n    useEffect(()=>{\n        getUser()\n        setIsAuth(prev=>user)\n    },[])\n\n    return (\n        <BrowserRouter>\n            {/* 로그인 상태시 내비게이션 바 표시 */}\n            {user&& <Navigation authService={authService} user={user}/>}\n            {/* 글로벌 스타일 */}\n            <GlobalStyle />\n            <Banner text={banner} isAlert={isAlert}/>\n            <Routes>\n                <Route path=\"/\" element={\n                    // 로그인 상태\n                    user ? <Home /> :<>\n                        {/* 로그인 */}\n                        <div className={styles.header}>\n                            <h1 className={styles.title}>ictus</h1>\n                        </div>\n                        <Auth setIsAuth={setIsAuth} authService={authService} setBanner={setBanner} setIsAlert={setIsAlert}/>\n                    </>\n                }/>\n                {/* 간식 게시판 */}\n                <Route path=\"/snack\" element={\n                    <Snack\n                        user={user}\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/snack/:id' element={\n                    <Read\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                {/* 맛집 게시판 */}\n                <Route path='/gourmet' element={\n                    <Gourmet\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/gourmet/reviews' element={\n                    <ReviewAll\n                        user={user}\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/gourmet/reviews/:id' element={\n                    <Read\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/gourmet/shops' element={\n                    <ShopAll\n                        user={user}\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js",["127"],"import React, {useState} from 'react';\nimport HTMLReactParser from \"html-react-parser\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport { useNavigate } from \"react-router-dom\";\nimport timeFormatter from \"../../util/date\";\nimport styles from './selected.module.css';\nimport Rating from \"react-rating\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faStar as faStarEmpty} from \"@fortawesome/free-regular-svg-icons\";\nimport {faStar} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Selected = ({selected, isOwner, setBanner, boardService, setIsAlert}) => {\n    const [editing, setEditing] = useState(false);\n    const [rating, setRating] = useState(selected.rate)\n    const isSnack = window.location.href.includes('snack')\n    const navigate = useNavigate();\n    // Edit\n    const onEditClick = (event) => {\n        if(isOwner){\n            setEditing(prev => !prev)\n        }\n    }\n    // Delete\n    const onDeleteClick =(event)=>{\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if(ok){\n            const {target:{id}} = event;\n            boardService.deleteBoard(id)\n                .catch(err=>setBanner(err.response.data.message))\n                .then(navigate(-1))\n        }\n    }\n\n    return(\n        <main>\n            {/*Section*/}\n            <section className={styles.section}>\n                {!editing && <>\n                    <header className={styles.header}>\n                        <h1 className={styles.title}>\n                            {selected.title}\n                            {!isSnack &&\n                            <div>\n                                <Rating\n                                    initialRating={rating}\n                                    emptySymbol={\n                                        <FontAwesomeIcon\n                                            icon={faStarEmpty}\n                                            style={{ color: \"rgb(253, 186, 73)\" }}\n                                        />}\n                                    fullSymbol={\n                                        <FontAwesomeIcon\n                                            icon={faStar}\n                                            style={{ color: \"rgb(253, 186, 73)\" }}\n                                        />\n                                    }\n                                    fractions={2}\n                                    readonly={true}\n                                />\n                            </div>}\n                        </h1>\n                    </header>\n                    <div className={styles.meta}>\n                        <div className={styles.date}><small>{timeFormatter(selected.date)}</small></div>\n                        <div className={styles.owner}><small>{selected.owner}</small></div>\n                    </div>\n                    <div className={styles.text}>\n                        {HTMLReactParser(selected.text)}\n                    </div>\n                    {isOwner &&\n                    <div className=\"btnContainer\">\n                        <button className={styles.btn} onClick={onEditClick}>{editing ? \"취소\" : \"글 수정하기\"}</button>\n                        <button className={styles.btn} id={selected.id} onClick={onDeleteClick}>글 삭제하기</button>\n                    </div>\n                    }\n                </>\n                }\n                {editing && <>\n                    <TextEditor\n                        isEdit={true}\n                        selected={selected}\n                        boardService={boardService}\n                        onCancelClick={onEditClick}\n                        onEditClick={onEditClick}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />\n                </>}\n            </section>\n        </main>\n    )\n};\n\nexport default Selected;","/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js",["128","129"],"/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js",[],"/Users/ictus/project1/notice-board/client/src/components/Navigation/Navigation.js",["130","131"],"/Users/ictus/project1/notice-board/client/src/components/Auth/Auth.js",["132"],"import React, {useState} from 'react';\nimport styles from './auth.module.css';\nimport Axios from \"axios\";\n\nconst Auth = ({setIsAuth, authService ,setBanner, setIsAlert}) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"username\") {\n            setUsername(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    // 로그인\n    const onLogin = async (event) => {\n        event.preventDefault();\n        try {\n            await authService.login(username, password)\n            authService.me()\n                .then(result=>setIsAuth(result.data))\n                .catch(console.error);\n        } catch (error) {\n            setIsAlert(true)\n            setBanner(error.response.data.message)\n        }\n    };\n\n    // 회원가입\n    const onJoin = async ()=>{\n        try {\n            await authService.signup(username, password)\n            setIsAlert(false)\n            setBanner(`${username}님, 가입되었습니다.`)\n            setUsername(username)\n            setPassword(\"\")\n        } catch (error) {\n            setIsAlert(true)\n            setBanner(error.response.data.message)\n        }\n    }\n\n    return (\n        <>\n            <div className={styles.container}>\n                <div className={styles.authContainer}>\n                    <div className={styles.formContainer}>\n                        <form className={styles.form} onSubmit={onLogin}>\n                            <div className={styles.inputContainer}>\n                                <input\n                                    className={styles.input}\n                                    name=\"username\"\n                                    type=\"text\"\n                                    required\n                                    value={username}\n                                    onChange={onChange}\n                                />\n                                <span className={styles.placeholder}>이름</span>\n                            </div>\n                            <div className={styles.inputContainer}>\n                                <input\n                                    className={styles.input}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    required\n                                    value={password}\n                                    onChange={onChange}\n                                />\n                                <span className={styles.placeholder}>비밀번호</span>\n                            </div>\n                            <div className={styles.formBtnContainer}>\n                                <input\n                                    className={styles.submitBtn}\n                                    type=\"submit\"\n                                    value=\"로그인\"\n                                />\n                                <span onClick={onJoin} className={styles.switch}>\n                                    회원가입\n                                </span>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Auth;","/Users/ictus/project1/notice-board/client/src/service/auth.js",[],"/Users/ictus/project1/notice-board/client/src/db/token.js",[],"/Users/ictus/project1/notice-board/client/src/components/Banner/Banner.js",[],"/Users/ictus/project1/notice-board/client/src/util/date.js",[],"/Users/ictus/project1/notice-board/client/src/components/Paging/Paging.js",[],"/Users/ictus/project1/notice-board/client/src/components/Map/MapContainer.js",["133","134"],"/Users/ictus/project1/notice-board/client/src/components/Map/SearchPlace.js",[],"/Users/ictus/project1/notice-board/client/src/util/GlobalStyles.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Snack/Snack.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Gourmet/Gourmet.js",["135"],"import React, {useCallback, useEffect, useState} from 'react';\nimport styles from './gourmet.module.css'\nimport {useNavigate} from \"react-router-dom\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Review from \"../../components/Review/Review\";\nimport Shop from \"../../components/Shop/Shop\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\n\nconst Gourmet = ({authService, boardService, setIsAlert, setBanner}) => {\n    const navigate = useNavigate();\n    const [data, setData] = useState();\n\n    const getBoards = useCallback(async() => {\n        const response = await boardService.getBoard()\n        return setData(prev=> [...response])\n    },[boardService])\n    useEffect(()=>{\n        getBoards()\n    },[])\n    useEffect(()=>{\n        authService.me().catch(err => navigate('/'))\n    },[authService,navigate])\n    return(\n        <>{data ?\n            <section className={styles.slickContainer}>\n                <Review\n                    data={data}\n                    boardService={boardService}\n                    setIsAlert={setIsAlert}\n                    setBanner={setBanner}\n                />\n                <Shop data={data}/>\n            </section>:\n            <LoadingSpinner/>\n        }</>\n\n)};\n\nexport default Gourmet;","/Users/ictus/project1/notice-board/client/src/components/Review/Review.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/Shop.js",["136"],"/Users/ictus/project1/notice-board/client/src/components/LoadingSpinner/LoadingSpinner.js",[],"/Users/ictus/project1/notice-board/client/src/components/Map/StaticMap.js",["137","138"],"/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js",[],"/Users/ictus/project1/notice-board/client/src/components/Review/ReviewAll.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/ShopAll.js",["139","140","141","142"],"/Users/ictus/project1/notice-board/client/src/components/Board/BoardItem.js",[],"/Users/ictus/project1/notice-board/client/src/components/Board/Board.js",["143","144"],"/Users/ictus/project1/notice-board/client/src/components/Rate/Rate.js",[],"/Users/ictus/project1/notice-board/client/src/service/board.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":4,"column":24,"nodeType":"151","messageId":"152","endLine":4,"endColumn":28},{"ruleId":"149","severity":1,"message":"153","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":13},{"ruleId":"149","severity":1,"message":"154","line":19,"column":12,"nodeType":"151","messageId":"152","endLine":19,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":21,"column":12,"nodeType":"151","messageId":"152","endLine":21,"endColumn":16},{"ruleId":"149","severity":1,"message":"156","line":21,"column":18,"nodeType":"151","messageId":"152","endLine":21,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":37,"column":7,"nodeType":"159","endLine":37,"endColumn":9,"suggestions":"160"},{"ruleId":"149","severity":1,"message":"161","line":14,"column":20,"nodeType":"151","messageId":"152","endLine":14,"endColumn":29},{"ruleId":"149","severity":1,"message":"162","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":13},{"ruleId":"149","severity":1,"message":"162","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"163","line":1,"column":27,"nodeType":"151","messageId":"152","endLine":1,"endColumn":35},{"ruleId":"149","severity":1,"message":"153","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"164","line":81,"column":17,"nodeType":"151","messageId":"152","endLine":81,"endColumn":23},{"ruleId":"157","severity":1,"message":"165","line":88,"column":8,"nodeType":"159","endLine":88,"endColumn":253,"suggestions":"166"},{"ruleId":"157","severity":1,"message":"167","line":20,"column":7,"nodeType":"159","endLine":20,"endColumn":9,"suggestions":"168"},{"ruleId":"149","severity":1,"message":"163","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"169","line":22,"column":13,"nodeType":"151","messageId":"152","endLine":22,"endColumn":22},{"ruleId":"157","severity":1,"message":"170","line":23,"column":7,"nodeType":"159","endLine":23,"endColumn":14,"suggestions":"171"},{"ruleId":"149","severity":1,"message":"172","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"162","line":1,"column":29,"nodeType":"151","messageId":"152","endLine":1,"endColumn":38},{"ruleId":"149","severity":1,"message":"163","line":1,"column":40,"nodeType":"151","messageId":"152","endLine":1,"endColumn":48},{"ruleId":"149","severity":1,"message":"173","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":20},{"ruleId":"149","severity":1,"message":"154","line":10,"column":12,"nodeType":"151","messageId":"152","endLine":10,"endColumn":18},{"ruleId":"157","severity":1,"message":"174","line":38,"column":7,"nodeType":"159","endLine":38,"endColumn":21,"suggestions":"175"},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'isAuth' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUser' and 'user'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsAuth' needs the current value of 'user'.","ArrayExpression",["178"],"'setRating' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'marker' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'kakao.maps.ControlPosition.LEFT', 'kakao.maps.ZoomControl', 'setKeyword', and 'setPlaceObj'. Either include them or remove the dependency array. If 'setKeyword' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["179"],"React Hook useEffect has a missing dependency: 'getBoards'. Either include it or remove the dependency array.",["180"],"'staticMap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coords', 'id', and 'title'. Either include them or remove the dependency array.",["181"],"'useCallback' is defined but never used.","'MapContainer' is defined but never used.","React Hook useCallback has a missing dependency: 'isShops'. Either include it or remove the dependency array.",["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [getUser, user]",{"range":"193","text":"194"},"Update the dependencies array to be: [kakao.maps.ControlPosition.LEFT, kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.MarkerImage, kakao.maps.Size, kakao.maps.ZoomControl, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, keyword, setKeyword, setPlaceObj, titleAndCoords]",{"range":"195","text":"196"},"Update the dependencies array to be: [getBoards]",{"range":"197","text":"198"},"Update the dependencies array to be: [coords, id, kakao, title]",{"range":"199","text":"200"},"Update the dependencies array to be: [boardService, isShops]",{"range":"201","text":"202"},[1304,1306],"[getUser, user]",[3271,3516],"[kakao.maps.ControlPosition.LEFT, kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.MarkerImage, kakao.maps.Size, kakao.maps.ZoomControl, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, keyword, setKeyword, setPlaceObj, titleAndCoords]",[783,785],"[getBoards]",[897,904],"[coords, id, kakao, title]",[1597,1611],"[boardService, isShops]"]