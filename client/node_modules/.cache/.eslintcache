[{"/Users/ictus/project1/notice-board/client/src/index.js":"1","/Users/ictus/project1/notice-board/client/src/App.js":"2","/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js":"3","/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js":"4","/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js":"5","/Users/ictus/project1/notice-board/client/src/components/Navigation/Navigation.js":"6","/Users/ictus/project1/notice-board/client/src/components/Auth/Auth.js":"7","/Users/ictus/project1/notice-board/client/src/service/auth.js":"8","/Users/ictus/project1/notice-board/client/src/db/token.js":"9","/Users/ictus/project1/notice-board/client/src/components/Banner/Banner.js":"10","/Users/ictus/project1/notice-board/client/src/util/date.js":"11","/Users/ictus/project1/notice-board/client/src/components/Paging/Paging.js":"12","/Users/ictus/project1/notice-board/client/src/components/Map/MapContainer.js":"13","/Users/ictus/project1/notice-board/client/src/components/Map/SearchPlace.js":"14","/Users/ictus/project1/notice-board/client/src/util/GlobalStyles.js":"15","/Users/ictus/project1/notice-board/client/src/routes/Snack/Snack.js":"16","/Users/ictus/project1/notice-board/client/src/routes/Gourmet/Gourmet.js":"17","/Users/ictus/project1/notice-board/client/src/components/Review/Review.js":"18","/Users/ictus/project1/notice-board/client/src/components/Shop/Shop.js":"19","/Users/ictus/project1/notice-board/client/src/components/LoadingSpinner/LoadingSpinner.js":"20","/Users/ictus/project1/notice-board/client/src/components/Map/StaticMap.js":"21","/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js":"22","/Users/ictus/project1/notice-board/client/src/components/Review/ReviewAll.js":"23","/Users/ictus/project1/notice-board/client/src/components/Shop/ShopAll.js":"24","/Users/ictus/project1/notice-board/client/src/components/Board/BoardItem.js":"25","/Users/ictus/project1/notice-board/client/src/components/Board/Board.js":"26","/Users/ictus/project1/notice-board/client/src/components/Rate/Rate.js":"27","/Users/ictus/project1/notice-board/client/src/service/board.js":"28","/Users/ictus/project1/notice-board/client/src/components/Shop/ShopDetail.js":"29","/Users/ictus/project1/notice-board/client/src/components/Review/ReviewItem.js":"30"},{"size":596,"mtime":1640739610157,"results":"31","hashOfConfig":"32"},{"size":4680,"mtime":1641440084567,"results":"33","hashOfConfig":"32"},{"size":4948,"mtime":1641781625099,"results":"34","hashOfConfig":"32"},{"size":7265,"mtime":1641790425121,"results":"35","hashOfConfig":"32"},{"size":1341,"mtime":1641609239922,"results":"36","hashOfConfig":"32"},{"size":960,"mtime":1641184358910,"results":"37","hashOfConfig":"32"},{"size":3425,"mtime":1640745366312,"results":"38","hashOfConfig":"32"},{"size":1272,"mtime":1640746760516,"results":"39","hashOfConfig":"32"},{"size":282,"mtime":1640741407218,"results":"40","hashOfConfig":"32"},{"size":322,"mtime":1638168262305,"results":"41","hashOfConfig":"32"},{"size":759,"mtime":1638228598697,"results":"42","hashOfConfig":"32"},{"size":545,"mtime":1640044390277,"results":"43","hashOfConfig":"32"},{"size":5265,"mtime":1641370743176,"results":"44","hashOfConfig":"32"},{"size":867,"mtime":1640219162770,"results":"45","hashOfConfig":"32"},{"size":2051,"mtime":1641429818282,"results":"46","hashOfConfig":"32"},{"size":387,"mtime":1640739788241,"results":"47","hashOfConfig":"32"},{"size":1317,"mtime":1641516328352,"results":"48","hashOfConfig":"32"},{"size":2109,"mtime":1641370828722,"results":"49","hashOfConfig":"32"},{"size":2693,"mtime":1641515755434,"results":"50","hashOfConfig":"32"},{"size":344,"mtime":1640221108667,"results":"51","hashOfConfig":"32"},{"size":1183,"mtime":1641453933347,"results":"52","hashOfConfig":"32"},{"size":736,"mtime":1640660282233,"results":"53","hashOfConfig":"32"},{"size":386,"mtime":1641477736893,"results":"54","hashOfConfig":"32"},{"size":383,"mtime":1641438844238,"results":"55","hashOfConfig":"32"},{"size":809,"mtime":1641473719667,"results":"56","hashOfConfig":"32"},{"size":3884,"mtime":1641789760857,"results":"57","hashOfConfig":"32"},{"size":1105,"mtime":1641180383755,"results":"58","hashOfConfig":"32"},{"size":1797,"mtime":1641790449376,"results":"59","hashOfConfig":"32"},{"size":3801,"mtime":1641440084560,"results":"60","hashOfConfig":"32"},{"size":1112,"mtime":1641613616098,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ryfszt",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/ictus/project1/notice-board/client/src/index.js",[],["132","133"],"/Users/ictus/project1/notice-board/client/src/App.js",["134","135","136","137","138"],"import Snack from \"./routes/Snack/Snack\";\nimport Read from \"./routes/Read/Read\";\nimport GlobalStyle from './util/GlobalStyles.js';\nimport {BrowserRouter, Link, Route, Routes} from \"react-router-dom\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport Banner from \"./components/Banner/Banner\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport styles from \"./components/Board/board.module.css\";\nimport Auth from \"./components/Auth/Auth\";\nimport Gourmet from \"./routes/Gourmet/Gourmet\";\nimport Home from './routes/Home/Home'\nimport ReviewAll from \"./components/Review/ReviewAll\";\nimport ShopAll from \"./components/Shop/ShopAll\";\nimport Board from \"./components/Board/Board\";\nimport ShopDetail from \"./components/Shop/ShopDetail\";\n\nfunction App({authService, boardService} ) {\n    const [user, setUser] = useState(undefined)\n    const [banner, setBanner] = useState('')\n    const [isAuth, setIsAuth] = useState(undefined)\n    const [isAlert, setIsAlert] = useState()\n\n    const getUser = useCallback(async()=>{\n        try {\n            const user  = await authService.me()\n            setUser(user.data)\n        }\n        catch(error){\n            console.log(error.message)\n        }\n        return user\n    },[user, authService])\n\n    useEffect(()=>{\n        getUser()\n        setIsAuth(prev=>user)\n    },[])\n\n    return (\n        <BrowserRouter>\n            {/* 로그인 상태시 내비게이션 바 표시 */}\n            {user&& <Navigation authService={authService} user={user}/>}\n            {/* 글로벌 스타일 */}\n            <GlobalStyle />\n            <Banner text={banner} isAlert={isAlert}/>\n            <Routes>\n                <Route path=\"/\" element={\n                    // 로그인 상태\n                    user ? <Home /> :<>\n                        {/* 로그인 */}\n                        <div className={styles.header}>\n                            <h1 className={styles.title}>ictus</h1>\n                        </div>\n                        <Auth setIsAuth={setIsAuth} authService={authService} setBanner={setBanner} setIsAlert={setIsAlert}/>\n                    </>\n                }/>\n                {/* 간식 게시판 */}\n                <Route path=\"/snack\" element={\n                    <Snack\n                        user={user}\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/snack/:id' element={\n                    <Read\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                {/* 맛집 게시판 */}\n                <Route path='/gourmet' element={\n                    <Gourmet\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/gourmet/reviews' element={\n                    <ReviewAll\n                        user={user}\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/gourmet/reviews/:id' element={\n                    <Read\n                        user={user}\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/gourmet/shops' element={\n                    <ShopAll\n                        user={user}\n                        authService={authService}\n                        boardService={boardService}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />}\n                />\n                <Route path='/gourmet/shops/:id' element={\n                    <ShopDetail\n                        user={user}\n                        authService={authService}\n                        boardService={boardService}\n                    />}\n                />\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js",["139"],"/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js",["140","141"],"/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js",[],"/Users/ictus/project1/notice-board/client/src/components/Navigation/Navigation.js",["142","143"],"import React, {useEffect, useState} from 'react';\nimport styles from './navigation.module.css';\nimport {Link, useNavigate} from \"react-router-dom\";\n\nconst Navigation = ({authService,user}) => {\n    const navigate = useNavigate()\n    const goHome = () => {\n        navigate(\"/\")\n    }\n    const onLogout = () =>{\n        authService.logout()\n        window.location.reload();\n    }\n\n    return(\n        <nav id='navbar' className={styles.nav}>\n            { window.location.pathname === \"/\" ||\n            <span className={styles.home} onClick={goHome}>홈</span>\n            }\n            { window.location.pathname ==='/' ? \"\" :(window.location.pathname ===\"/gourmet\" ?\n                <Link to='/snack'>간식 게시판</Link> :\n                <Link to='/gourmet'>맛집 지도</Link>)}\n            { user &&\n            <span className={styles.logout} onClick={onLogout}>로그아웃</span>\n            }\n        </nav>\n    );\n}\n\nexport default Navigation;","/Users/ictus/project1/notice-board/client/src/components/Auth/Auth.js",["144"],"import React, {useState} from 'react';\nimport styles from './auth.module.css';\nimport Axios from \"axios\";\n\nconst Auth = ({setIsAuth, authService ,setBanner, setIsAlert}) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"username\") {\n            setUsername(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    // 로그인\n    const onLogin = async (event) => {\n        event.preventDefault();\n        try {\n            await authService.login(username, password)\n            authService.me()\n                .then(result=>setIsAuth(result.data))\n                .catch(console.error);\n        } catch (error) {\n            setIsAlert(true)\n            setBanner(error.response.data.message)\n        }\n    };\n\n    // 회원가입\n    const onJoin = async ()=>{\n        try {\n            await authService.signup(username, password)\n            setIsAlert(false)\n            setBanner(`${username}님, 가입되었습니다.`)\n            setUsername(username)\n            setPassword(\"\")\n        } catch (error) {\n            setIsAlert(true)\n            setBanner(error.response.data.message)\n        }\n    }\n\n    return (\n        <>\n            <div className={styles.container}>\n                <div className={styles.authContainer}>\n                    <div className={styles.formContainer}>\n                        <form className={styles.form} onSubmit={onLogin}>\n                            <div className={styles.inputContainer}>\n                                <input\n                                    className={styles.input}\n                                    name=\"username\"\n                                    type=\"text\"\n                                    required\n                                    value={username}\n                                    onChange={onChange}\n                                />\n                                <span className={styles.placeholder}>이름</span>\n                            </div>\n                            <div className={styles.inputContainer}>\n                                <input\n                                    className={styles.input}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    required\n                                    value={password}\n                                    onChange={onChange}\n                                />\n                                <span className={styles.placeholder}>비밀번호</span>\n                            </div>\n                            <div className={styles.formBtnContainer}>\n                                <input\n                                    className={styles.submitBtn}\n                                    type=\"submit\"\n                                    value=\"로그인\"\n                                />\n                                <span onClick={onJoin} className={styles.switch}>\n                                    회원가입\n                                </span>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Auth;","/Users/ictus/project1/notice-board/client/src/service/auth.js",[],"/Users/ictus/project1/notice-board/client/src/db/token.js",[],"/Users/ictus/project1/notice-board/client/src/components/Banner/Banner.js",[],"/Users/ictus/project1/notice-board/client/src/util/date.js",[],"/Users/ictus/project1/notice-board/client/src/components/Paging/Paging.js",[],"/Users/ictus/project1/notice-board/client/src/components/Map/MapContainer.js",["145"],"import React, {useEffect} from \"react\";\n\nconst MapContainer = ({keyword, setKeyword, setPlaceObj, titleAndCoords}) => {\nconst { kakao } = window;\n    useEffect(() => {\n        let infowindow = new kakao.maps.InfoWindow({zIndex:1});\n        const container = document.getElementById(`myMap`);\n        const options = {\n            center: new kakao.maps.LatLng(37.48308613407299, 126.87710497557258),\n            level: 4\n        };\n        const map = new kakao.maps.Map(container, options);\n        if(keyword){\n            // 장소 검색 객체를 생성\n            const ps = new kakao.maps.services.Places();\n\n            // 키워드로 장소를 검색\n\n            ps.keywordSearch(keyword, placesSearchCB);\n\n            // 키워드 검색 완료 시 호출되는 콜백함수\n            function placesSearchCB(data, status, pagination) {\n                if (status === kakao.maps.services.Status.OK) {\n                    // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n                    // LatLngBounds 객체에 좌표를 추가\n                    let bounds = new kakao.maps.LatLngBounds();\n\n                    for (let i = 0; i < data.length; i++) {\n                        displayMarker(data[i]);\n                        bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n                    }\n                    // 검색된 장소 위치를 기준으로 지도 범위를 재설정\n                    map.setBounds(bounds);\n                }\n            }\n\n            // 지도에 마커를 표시하는 함수\n            function displayMarker(place) {\n\n                // 마커를 생성하고 지도에 표시\n                let marker = new kakao.maps.Marker({\n                    map: map,\n                    position: new kakao.maps.LatLng(place.y, place.x)\n                });\n\n                // 마커에 클릭이벤트를 등록\n                kakao.maps.event.addListener(marker, 'click', function () {\n\n                    // 클릭한 마커의 이름으로 title input value\n                    setKeyword(place.place_name)\n                    setPlaceObj(place)\n\n                    // 마커를 클릭하면 장소명이 인포윈도우에 표출\n                    infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\n                    infowindow.open(map, marker);\n                });\n            }\n        }\n\n        // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n        var zoomControl = new kakao.maps.ZoomControl();\n        map.addControl(zoomControl, kakao.maps.ControlPosition.LEFT);\n\n        // 마커를 표시할 위치와 title 객체 배열\n        let positions = titleAndCoords.map(item=>{\n            const title = item.title\n            const latlngs = item.coords\n            return {title, latlng: new kakao.maps.LatLng(latlngs[1], latlngs[0])}\n        })\n\n        const imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png'\n        for (var i = 0; i < positions.length; i ++) {\n\n            // 마커 이미지의 이미지 크기 입니다\n            var imageSize = new kakao.maps.Size(24, 35);\n\n            // 마커 이미지를 생성합니다\n            var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\n\n            // 마커를 생성합니다\n            var staticMarker = new kakao.maps.Marker({\n                map: map, // 마커를 표시할 지도\n                position: positions[i].latlng, // 마커를 표시할 위치\n                image : markerImage, // 마커 이미지\n            });\n\n            // 마커에 표시할 인포윈도우를 생성합니다\n            var staticInfowindow = new kakao.maps.InfoWindow({\n                // 인포윈도우에 표시할 내용\n                content: `<div style=\"font-size: 12px;padding: 5px;\">${positions[i].title}</div>`\n            });\n            // 마커에 이벤트를 등록하는 함수 만들고 즉시 호출하여 클로저를 만듭니다\n            (function(staticMarker, staticInfowindow) {\n                // 마커에 mouseover 이벤트를 등록하고 마우스 오버 시 인포윈도우를 표시합니다\n                kakao.maps.event.addListener(staticMarker, 'mouseover', function() {\n                    staticInfowindow.open(map, staticMarker);\n                });\n\n                // 마커에 mouseout 이벤트를 등록하고 마우스 아웃 시 인포윈도우를 닫습니다\n                kakao.maps.event.addListener(staticMarker, 'mouseout', function() {\n                    staticInfowindow.close();\n                });\n            })(staticMarker, staticInfowindow);\n        }\n    }, [kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.MarkerImage, kakao.maps.Size, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, keyword, titleAndCoords]);\n    return (\n        <div id={`myMap`} style={{\n            width: '60vw',\n            minHeight: '78vh',\n            marginBottom:'2em',\n            border:'1px solid #333',\n            borderRadius: '4px',\n        }}></div>\n    );\n}\n\nexport default MapContainer;","/Users/ictus/project1/notice-board/client/src/components/Map/SearchPlace.js",[],["146","147"],"/Users/ictus/project1/notice-board/client/src/util/GlobalStyles.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Snack/Snack.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Gourmet/Gourmet.js",["148"],"import React, {useCallback, useEffect, useState} from 'react';\nimport styles from './gourmet.module.css'\nimport {useNavigate} from \"react-router-dom\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Review from \"../../components/Review/Review\";\nimport Shop from \"../../components/Shop/Shop\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\n\nconst Gourmet = ({authService, boardService, setIsAlert, setBanner}) => {\n    const navigate = useNavigate();\n    const [data, setData] = useState();\n\n    const getBoards = useCallback(async() => {\n        const response = await boardService.getBoard()\n        return setData(prev=> [...response])\n    },[boardService])\n    useEffect(()=>{\n        getBoards()\n    },[])\n    useEffect(()=>{\n        authService.me().catch(err => navigate('/'))\n    },[authService,navigate])\n    return(\n        <>{data ?\n            <section className={styles.slickContainer}>\n                <Review\n                    data={data}\n                    boardService={boardService}\n                    setIsAlert={setIsAlert}\n                    setBanner={setBanner}\n                />\n                <Shop data={data}/>\n            </section>:\n            <LoadingSpinner/>\n        }</>\n\n)};\n\nexport default Gourmet;","/Users/ictus/project1/notice-board/client/src/components/Review/Review.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/Shop.js",["149"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar, faStarHalfAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as faStarEmpty } from \"@fortawesome/free-regular-svg-icons\";\nimport StaticMap from \"../Map/StaticMap\";\nimport styles from \"../../routes/Gourmet/gourmet.module.css\";\nimport Slider from \"react-slick\";\nimport StarRatingComponent from 'react-star-rating-component-new';\nimport {Link} from \"react-router-dom\";\n\n\nconst Shop = ({data}) => {\n    const settings = {\n        dots: true,\n        arrows: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 4,\n        slidesToScroll: 1\n    };\n\n    return(\n        <div className={styles.slick}>\n            <div className={styles.buttonContainer}>\n                <Link to='./shops'>\n                    <button>전체보기 / 등록하기</button>\n                </Link>\n            </div>\n            <h2 className={styles.slickTitle}>최근 등록 맛집</h2>\n            <Slider {...settings}>\n                {data.slice(0,6).map((review)=>\n                    <div className={styles.slickItem} key={review.id}>\n                        <div className={styles.slickTitleContainer}>\n                            <h2 className={styles.shopsTitle}>{review.title}</h2>\n                            <StarRatingComponent\n                                name=\"productRating\"\n                                editing={false}\n                                renderStarIcon={() => (\n                                <FontAwesomeIcon\n                                    icon={faStar}\n                                    style={{ color: \"rgb(253, 186, 73)\" }}\n                                />\n                            )}\n                                renderStarIconHalf={() => (\n                                <FontAwesomeIcon\n                                    icon={faStarHalfAlt}\n                                    style={{ color: \"rgb(253, 186, 73)\" }}\n                                />\n                            )}\n                                renderEmptyStarIcon={() => (\n                                <FontAwesomeIcon\n                                    icon={faStarEmpty}\n                                    style={{ color: \"rgb(253, 186, 73)\" }}\n                                />\n                            )}\n                                starCount={5}\n                                value={review.rate}/>\n                        </div>\n                        <StaticMap shop={review} key={review.id}/>\n                    </div>\n                )}\n            </Slider>\n        </div>\n    )};\n\nexport default Shop;","/Users/ictus/project1/notice-board/client/src/components/LoadingSpinner/LoadingSpinner.js",[],"/Users/ictus/project1/notice-board/client/src/components/Map/StaticMap.js",["150","151"],"import React,{useEffect} from 'react';\n\n\nconst StaticMap = ({shop:{id, coords, title }}) => {\n    const { kakao } = window;\n    useEffect(()=>{\n        var markers = [\n            {\n                position: new kakao.maps.LatLng(parseFloat(coords.split(',')[1]), parseFloat(coords.split(',')[0])),\n                text: title // text 옵션을 설정하면 마커 위에 텍스트를 함께 표시할 수 있습니다\n            }\n        ];\n        var staticMapContainer  = document.getElementById(`staticMap${id}`), // 이미지 지도를 표시할 div\n            staticMapOption = {\n                center: new kakao.maps.LatLng(parseFloat(coords.split(',')[1]), parseFloat(coords.split(',')[0])),\n                // 이미지 지도의 중심좌표\n                level: 4, // 이미지 지도의 확대 레벨\n                marker: markers, // 이미지 지도에 표시할 마커\n            };\n\n        // 이미지 지도를 생성합니다\n        var staticMap = new kakao.maps.StaticMap(staticMapContainer, staticMapOption);\n    },[kakao])\n    return(\n        <div id={`staticMap${id}`} style={{width:\"100%\",height:\"100%\"}}></div>\n    )};\n\nexport default StaticMap;","/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js",[],"/Users/ictus/project1/notice-board/client/src/components/Review/ReviewAll.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/ShopAll.js",[],"/Users/ictus/project1/notice-board/client/src/components/Board/BoardItem.js",[],"/Users/ictus/project1/notice-board/client/src/components/Board/Board.js",["152"],"/Users/ictus/project1/notice-board/client/src/components/Rate/Rate.js",[],"/Users/ictus/project1/notice-board/client/src/service/board.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/ShopDetail.js",["153","154","155","156","157","158","159"],"import React, {useCallback, useEffect, useState} from 'react';\nimport Board from \"../Board/Board\";\nimport {useNavigate} from \"react-router-dom\";\nimport styles from \"../Board/board.module.css\";\nimport MapContainer from \"../Map/MapContainer\";\nimport BoardItem from \"../Board/BoardItem\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport Paging from \"../Paging/Paging\";\n\nconst ShopDetail = ({user, authService, boardService}) => {\n    const [isAuth, setIsAuth] = useState(undefined)\n    const [writing, setWriting] = useState(false)\n    const [viewContent,setViewContent] = useState([])\n    const [titleAndCoords,setTitleAndCoords] = useState([])\n    const [page, setPage] = useState(1)\n    const [keyword, setKeyword] = useState('');\n    const [placeObj, setPlaceObj] = useState()\n    const navigate = useNavigate()\n    const isShops = window.location.href.includes('shops')\n    const itemsPerPage = 12\n    const onWriteClick = () => {\n        setKeyword('')\n        setWriting(prev=>!prev)\n    }\n    const pagination = (array, page, itemsPerPage) =>\n        array.slice((page-1)*itemsPerPage, (page-1)*itemsPerPage+itemsPerPage)\n\n    // 게시판 가져오기\n    const getBoards = useCallback(async() => {\n        const response = await boardService.getBoard()\n        if(isShops){\n            const data = response.map(item=>{\n                const titles=item.title;\n                const coords=item.coords.split(',');\n                return {title:titles, coords:coords.map(item=>parseFloat(item))}\n            })\n            // setTitleAndCoords([...data])\n        }\n        return setViewContent(prev=> [...response])\n    },[boardService, isShops])\n\n    useEffect( ()=>{\n        getBoards()\n        setIsAuth(prev=>user)\n    },[getBoards,user,placeObj])\n\n    // 로그인 확인\n    useEffect(()=>{\n        authService.me().catch(err => navigate('/'))\n    },[authService,navigate])\n\n    return(\n        <main className={`${styles.main} ${isShops && styles.shopsMain}`}>\n            {/*{isShops &&*/}\n            {/*<MapContainer*/}\n            {/*    keyword={keyword}*/}\n            {/*    setKeyword={setKeyword}*/}\n            {/*    setPlaceObj={setPlaceObj}*/}\n            {/*    titleAndCoords={titleAndCoords}*/}\n            {/*/>}*/}\n            <section className={styles.section}>\n                <>\n                    <ul className={styles.list}>\n                        {pagination(viewContent, page, itemsPerPage).map((content,index) =>\n                            <li key={index} className={styles.item}>\n                                <BoardItem content={content} />\n                            </li>\n                        )}\n                    </ul>\n                    {writing ?\n                        <TextEditor\n                            isEdit={false}\n                            onWriteClick={onWriteClick}\n                            boardService={boardService}\n                            getBoards={getBoards}\n                            user={user}\n                            keyword={keyword}\n                            setKeyword={setKeyword}\n                            placeObj={placeObj}\n                        /> :\n                        <div className=\"btnContainer noBorder\">\n                            <button className={styles.btn} onClick={onWriteClick}>\n                                {isShops ? '맛집 검색' : '글 작성하기'}\n                            </button>\n                        </div>}\n                    <Paging\n                        page={page}\n                        setPage={setPage}\n                        totalCount={viewContent.length}\n                        itemsPerPage={itemsPerPage}\n                    />\n                </>\n            </section>\n        </main>\n    )};\n\nexport default ShopDetail;","/Users/ictus/project1/notice-board/client/src/components/Review/ReviewItem.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":4,"column":24,"nodeType":"166","messageId":"167","endLine":4,"endColumn":28},{"ruleId":"164","severity":1,"message":"168","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":13},{"ruleId":"164","severity":1,"message":"169","line":15,"column":8,"nodeType":"166","messageId":"167","endLine":15,"endColumn":13},{"ruleId":"164","severity":1,"message":"170","line":21,"column":12,"nodeType":"166","messageId":"167","endLine":21,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":38,"column":7,"nodeType":"173","endLine":38,"endColumn":9,"suggestions":"174"},{"ruleId":"164","severity":1,"message":"175","line":15,"column":20,"nodeType":"166","messageId":"167","endLine":15,"endColumn":29},{"ruleId":"164","severity":1,"message":"176","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"168","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":13},{"ruleId":"164","severity":1,"message":"176","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"177","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":35},{"ruleId":"164","severity":1,"message":"168","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":13},{"ruleId":"171","severity":1,"message":"178","line":105,"column":8,"nodeType":"173","endLine":105,"endColumn":253,"suggestions":"179"},{"ruleId":"160","replacedBy":"180"},{"ruleId":"162","replacedBy":"181"},{"ruleId":"171","severity":1,"message":"182","line":20,"column":7,"nodeType":"173","endLine":20,"endColumn":9,"suggestions":"183"},{"ruleId":"164","severity":1,"message":"177","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":24},{"ruleId":"164","severity":1,"message":"184","line":22,"column":13,"nodeType":"166","messageId":"167","endLine":22,"endColumn":22},{"ruleId":"171","severity":1,"message":"185","line":23,"column":7,"nodeType":"173","endLine":23,"endColumn":14,"suggestions":"186"},{"ruleId":"164","severity":1,"message":"170","line":10,"column":12,"nodeType":"166","messageId":"167","endLine":10,"endColumn":18},{"ruleId":"164","severity":1,"message":"169","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":13},{"ruleId":"164","severity":1,"message":"187","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":20},{"ruleId":"164","severity":1,"message":"170","line":11,"column":12,"nodeType":"166","messageId":"167","endLine":11,"endColumn":18},{"ruleId":"164","severity":1,"message":"188","line":14,"column":12,"nodeType":"166","messageId":"167","endLine":14,"endColumn":26},{"ruleId":"164","severity":1,"message":"189","line":14,"column":27,"nodeType":"166","messageId":"167","endLine":14,"endColumn":44},{"ruleId":"164","severity":1,"message":"190","line":17,"column":22,"nodeType":"166","messageId":"167","endLine":17,"endColumn":33},{"ruleId":"164","severity":1,"message":"191","line":32,"column":19,"nodeType":"166","messageId":"167","endLine":32,"endColumn":23},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'Board' is defined but never used.","'isAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUser' and 'user'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsAuth' needs the current value of 'user'.","ArrayExpression",["194"],"'setRating' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'kakao.maps.ControlPosition.LEFT', 'kakao.maps.ZoomControl', 'setKeyword', and 'setPlaceObj'. Either include them or remove the dependency array. If 'setKeyword' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["195"],["192"],["193"],"React Hook useEffect has a missing dependency: 'getBoards'. Either include it or remove the dependency array.",["196"],"'staticMap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coords', 'id', and 'title'. Either include them or remove the dependency array.",["197"],"'MapContainer' is defined but never used.","'titleAndCoords' is assigned a value but never used.","'setTitleAndCoords' is assigned a value but never used.","'setPlaceObj' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [getUser, user]",{"range":"206","text":"207"},"Update the dependencies array to be: [kakao.maps.ControlPosition.LEFT, kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.MarkerImage, kakao.maps.Size, kakao.maps.ZoomControl, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, keyword, setKeyword, setPlaceObj, titleAndCoords]",{"range":"208","text":"209"},"Update the dependencies array to be: [getBoards]",{"range":"210","text":"211"},"Update the dependencies array to be: [coords, id, kakao, title]",{"range":"212","text":"213"},[1369,1371],"[getUser, user]",[4047,4292],"[kakao.maps.ControlPosition.LEFT, kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.MarkerImage, kakao.maps.Size, kakao.maps.ZoomControl, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, keyword, setKeyword, setPlaceObj, titleAndCoords]",[783,785],"[getBoards]",[897,904],"[coords, id, kakao, title]"]