[{"/Users/ictus/project1/notice-board/client/src/index.js":"1","/Users/ictus/project1/notice-board/client/src/App.js":"2","/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js":"3","/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js":"4","/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js":"5","/Users/ictus/project1/notice-board/client/src/components/Navigation/Navigation.js":"6","/Users/ictus/project1/notice-board/client/src/components/Auth/Auth.js":"7","/Users/ictus/project1/notice-board/client/src/service/auth.js":"8","/Users/ictus/project1/notice-board/client/src/db/token.js":"9","/Users/ictus/project1/notice-board/client/src/components/Banner/Banner.js":"10","/Users/ictus/project1/notice-board/client/src/util/date.js":"11","/Users/ictus/project1/notice-board/client/src/components/Paging/Paging.js":"12","/Users/ictus/project1/notice-board/client/src/components/Map/MapContainer.js":"13","/Users/ictus/project1/notice-board/client/src/components/Map/SearchPlace.js":"14","/Users/ictus/project1/notice-board/client/src/util/GlobalStyles.js":"15","/Users/ictus/project1/notice-board/client/src/routes/Snack/Snack.js":"16","/Users/ictus/project1/notice-board/client/src/routes/Gourmet/Gourmet.js":"17","/Users/ictus/project1/notice-board/client/src/components/Review/Review.js":"18","/Users/ictus/project1/notice-board/client/src/components/Shop/Shop.js":"19","/Users/ictus/project1/notice-board/client/src/components/LoadingSpinner/LoadingSpinner.js":"20","/Users/ictus/project1/notice-board/client/src/components/Map/StaticMap.js":"21","/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js":"22","/Users/ictus/project1/notice-board/client/src/components/Review/ReviewAll.js":"23","/Users/ictus/project1/notice-board/client/src/components/Shop/ShopAll.js":"24","/Users/ictus/project1/notice-board/client/src/components/Board/BoardItem.js":"25","/Users/ictus/project1/notice-board/client/src/components/Board/Board.js":"26","/Users/ictus/project1/notice-board/client/src/components/Rate/Rate.js":"27","/Users/ictus/project1/notice-board/client/src/service/board.js":"28"},{"size":596,"mtime":1640739610157,"results":"29","hashOfConfig":"30"},{"size":4089,"mtime":1640922019626,"results":"31","hashOfConfig":"30"},{"size":3905,"mtime":1640850833688,"results":"32","hashOfConfig":"30"},{"size":7433,"mtime":1640922351970,"results":"33","hashOfConfig":"30"},{"size":1313,"mtime":1640827366900,"results":"34","hashOfConfig":"30"},{"size":961,"mtime":1640149759661,"results":"35","hashOfConfig":"30"},{"size":3425,"mtime":1640745366312,"results":"36","hashOfConfig":"30"},{"size":1272,"mtime":1640746760516,"results":"37","hashOfConfig":"30"},{"size":282,"mtime":1640741407218,"results":"38","hashOfConfig":"30"},{"size":322,"mtime":1638168262305,"results":"39","hashOfConfig":"30"},{"size":759,"mtime":1638228598697,"results":"40","hashOfConfig":"30"},{"size":545,"mtime":1640044390277,"results":"41","hashOfConfig":"30"},{"size":2279,"mtime":1640226815590,"results":"42","hashOfConfig":"30"},{"size":867,"mtime":1640219162770,"results":"43","hashOfConfig":"30"},{"size":1975,"mtime":1640243914543,"results":"44","hashOfConfig":"30"},{"size":387,"mtime":1640739788241,"results":"45","hashOfConfig":"30"},{"size":1317,"mtime":1640921628768,"results":"46","hashOfConfig":"30"},{"size":2161,"mtime":1640922430553,"results":"47","hashOfConfig":"30"},{"size":2541,"mtime":1640846070924,"results":"48","hashOfConfig":"30"},{"size":344,"mtime":1640221108667,"results":"49","hashOfConfig":"30"},{"size":1172,"mtime":1640244684082,"results":"50","hashOfConfig":"30"},{"size":736,"mtime":1640660282233,"results":"51","hashOfConfig":"30"},{"size":391,"mtime":1640846436452,"results":"52","hashOfConfig":"30"},{"size":107,"mtime":1640245954320,"results":"53","hashOfConfig":"30"},{"size":718,"mtime":1640751545152,"results":"54","hashOfConfig":"30"},{"size":2504,"mtime":1640821873873,"results":"55","hashOfConfig":"30"},{"size":1104,"mtime":1640904942363,"results":"56","hashOfConfig":"30"},{"size":1532,"mtime":1640854662259,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ryfszt",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ictus/project1/notice-board/client/src/index.js",[],"/Users/ictus/project1/notice-board/client/src/App.js",["121","122","123","124","125","126"],"/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js",["127"],"import React, {useState} from 'react';\nimport HTMLReactParser from \"html-react-parser\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport { useNavigate } from \"react-router-dom\";\nimport timeFormatter from \"../../util/date\";\nimport styles from './selected.module.css';\nimport Rating from \"react-rating\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faStar as faStarEmpty} from \"@fortawesome/free-regular-svg-icons\";\nimport {faStar} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Selected = ({selected, isOwner, setBanner, boardService, setIsAlert}) => {\n    const [editing, setEditing] = useState(false);\n    const [rating, setRating] = useState(selected.rate)\n    const isSnack = window.location.href.includes('snack')\n    const navigate = useNavigate();\n    // Edit\n    const onEditClick = (event) => {\n        if(isOwner){\n            setEditing(prev => !prev)\n        }\n    }\n    // Delete\n    const onDeleteClick =(event)=>{\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if(ok){\n            const {target:{id}} = event;\n            boardService.deleteBoard(id)\n                .catch(err=>setBanner(err.response.data.message))\n                .then(navigate(-1))\n        }\n    }\n\n    return(\n        <main>\n            {/*Section*/}\n            <section className={styles.section}>\n                {!editing && <>\n                    <header className={styles.header}>\n                        <h1 className={styles.title}>\n                            {selected.title}\n                            {!isSnack &&\n                            <div>\n                                <Rating\n                                    initialRating={rating}\n                                    emptySymbol={\n                                        <FontAwesomeIcon\n                                            icon={faStarEmpty}\n                                            style={{ color: \"rgb(253, 186, 73)\" }}\n                                        />}\n                                    fullSymbol={\n                                        <FontAwesomeIcon\n                                            icon={faStar}\n                                            style={{ color: \"rgb(253, 186, 73)\" }}\n                                        />\n                                    }\n                                    fractions={2}\n                                    readonly={true}\n                                />\n                            </div>}\n                        </h1>\n                    </header>\n                    <div className={styles.meta}>\n                        <div className={styles.date}><small>{timeFormatter(selected.date)}</small></div>\n                        <div className={styles.owner}><small>{selected.owner}</small></div>\n                    </div>\n                    <div className={styles.text}>\n                        {HTMLReactParser(selected.text)}\n                    </div>\n                    {isOwner &&\n                    <div className=\"btnContainer\">\n                        <button className={styles.btn} onClick={onEditClick}>{editing ? \"취소\" : \"글 수정하기\"}</button>\n                        <button className={styles.btn} id={selected.id} onClick={onDeleteClick}>글 삭제하기</button>\n                    </div>\n                    }\n                </>\n                }\n                {editing && <>\n                    <TextEditor\n                        isEdit={true}\n                        selected={selected}\n                        boardService={boardService}\n                        onCancelClick={onEditClick}\n                        onEditClick={onEditClick}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}\n                    />\n                </>}\n            </section>\n        </main>\n    )\n};\n\nexport default Selected;",["128","129"],"/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js",["130","131"],"/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js",[],"/Users/ictus/project1/notice-board/client/src/components/Navigation/Navigation.js",["132","133"],"import React, {useEffect, useState} from 'react';\nimport styles from './navigation.module.css';\nimport {Link, useNavigate} from \"react-router-dom\";\n\nconst Navigation = ({authService,user}) => {\n    const navigate = useNavigate()\n    const goHome = () => {\n        navigate(\"/\")\n    }\n    const onLogout = () =>{\n        authService.logout()\n        window.location.reload();\n    }\n\n    return(\n        <nav id='navbar' className={styles.nav}>\n            { window.location.pathname === \"/\" ||\n            <span className={styles.home} onClick={goHome}>홈</span>\n            }\n            { window.location.pathname ==='/' ? \"\" :(window.location.pathname ===\"/gourmet\" ?\n                <Link to='/boards'>간식 게시판</Link> :\n                <Link to='/gourmet'>맛집 지도</Link>)}\n            { user &&\n            <span className={styles.logout} onClick={onLogout}>로그아웃</span>\n            }\n        </nav>\n    );\n}\n\nexport default Navigation;","/Users/ictus/project1/notice-board/client/src/components/Auth/Auth.js",["134"],"import React, {useState} from 'react';\nimport styles from './auth.module.css';\nimport Axios from \"axios\";\n\nconst Auth = ({setIsAuth, authService ,setBanner, setIsAlert}) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"username\") {\n            setUsername(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    // 로그인\n    const onLogin = async (event) => {\n        event.preventDefault();\n        try {\n            await authService.login(username, password)\n            authService.me()\n                .then(result=>setIsAuth(result.data))\n                .catch(console.error);\n        } catch (error) {\n            setIsAlert(true)\n            setBanner(error.response.data.message)\n        }\n    };\n\n    // 회원가입\n    const onJoin = async ()=>{\n        try {\n            await authService.signup(username, password)\n            setIsAlert(false)\n            setBanner(`${username}님, 가입되었습니다.`)\n            setUsername(username)\n            setPassword(\"\")\n        } catch (error) {\n            setIsAlert(true)\n            setBanner(error.response.data.message)\n        }\n    }\n\n    return (\n        <>\n            <div className={styles.container}>\n                <div className={styles.authContainer}>\n                    <div className={styles.formContainer}>\n                        <form className={styles.form} onSubmit={onLogin}>\n                            <div className={styles.inputContainer}>\n                                <input\n                                    className={styles.input}\n                                    name=\"username\"\n                                    type=\"text\"\n                                    required\n                                    value={username}\n                                    onChange={onChange}\n                                />\n                                <span className={styles.placeholder}>이름</span>\n                            </div>\n                            <div className={styles.inputContainer}>\n                                <input\n                                    className={styles.input}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    required\n                                    value={password}\n                                    onChange={onChange}\n                                />\n                                <span className={styles.placeholder}>비밀번호</span>\n                            </div>\n                            <div className={styles.formBtnContainer}>\n                                <input\n                                    className={styles.submitBtn}\n                                    type=\"submit\"\n                                    value=\"로그인\"\n                                />\n                                <span onClick={onJoin} className={styles.switch}>\n                                    회원가입\n                                </span>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Auth;","/Users/ictus/project1/notice-board/client/src/service/auth.js",[],"/Users/ictus/project1/notice-board/client/src/db/token.js",[],"/Users/ictus/project1/notice-board/client/src/components/Banner/Banner.js",[],"/Users/ictus/project1/notice-board/client/src/util/date.js",[],"/Users/ictus/project1/notice-board/client/src/components/Paging/Paging.js",[],"/Users/ictus/project1/notice-board/client/src/components/Map/MapContainer.js",["135"],"/Users/ictus/project1/notice-board/client/src/components/Map/SearchPlace.js",[],"/Users/ictus/project1/notice-board/client/src/util/GlobalStyles.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Snack/Snack.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Gourmet/Gourmet.js",["136"],"/Users/ictus/project1/notice-board/client/src/components/Review/Review.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/Shop.js",["137"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar, faStarHalfAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as faStarEmpty } from \"@fortawesome/free-regular-svg-icons\";\nimport StaticMap from \"../Map/StaticMap\";\nimport styles from \"../../routes/Gourmet/gourmet.module.css\";\nimport Slider from \"react-slick\";\nimport StarRatingComponent from 'react-star-rating-component-new';\nimport {Link} from \"react-router-dom\";\n\n\nconst Shop = ({data}) => {\n    const settings = {\n        dots: true,\n        arrows: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 4,\n        slidesToScroll: 1\n    };\n    return(\n        <div className={styles.slick}>\n            <div className={styles.buttonContainer}>\n                <Link to='./shops'>\n                    <button>전체보기</button>\n                </Link>\n                <button>작성하기</button>\n            </div>\n            <h2 className={styles.slickTitle}>최근 등록 맛집</h2>\n            <Slider {...settings}>\n                {data.slice(0,6).map((review)=>\n                    <div className={styles.slickItem} key={review.id}>\n                        <h2>{review.title}</h2>\n                        <StarRatingComponent\n                            name=\"productRating\"\n                            editing={false}\n                            renderStarIcon={() => (\n                                <FontAwesomeIcon\n                                    icon={faStar}\n                                    style={{ color: \"rgb(253, 186, 73)\" }}\n                                />\n                            )}\n                            renderStarIconHalf={() => (\n                                <FontAwesomeIcon\n                                    icon={faStarHalfAlt}\n                                    style={{ color: \"rgb(253, 186, 73)\" }}\n                                />\n                            )}\n                            renderEmptyStarIcon={() => (\n                                <FontAwesomeIcon\n                                    icon={faStarEmpty}\n                                    style={{ color: \"rgb(253, 186, 73)\" }}\n                                />\n                            )}\n                            starCount={5}\n                            value={review.rate}/>\n                        <StaticMap shop={review}/>\n                    </div>\n                )}\n            </Slider>\n        </div>\n    )};\n\nexport default Shop;","/Users/ictus/project1/notice-board/client/src/components/LoadingSpinner/LoadingSpinner.js",[],"/Users/ictus/project1/notice-board/client/src/components/Map/StaticMap.js",["138","139"],"import React,{useEffect} from 'react';\n\n\nconst StaticMap = ({shop:{id, coords, name }}) => {\n    const { kakao } = window;\n    useEffect(()=>{\n        var markers = [\n            {\n                position: new kakao.maps.LatLng(coords[0], coords[1])\n            },\n            {\n                position: new kakao.maps.LatLng(coords[0], coords[1]),\n                text: name // text 옵션을 설정하면 마커 위에 텍스트를 함께 표시할 수 있습니다\n            }\n        ];\n\n        var staticMapContainer  = document.getElementById(`staticMap${id}`), // 이미지 지도를 표시할 div\n            staticMapOption = {\n                center: new kakao.maps.LatLng(coords[0], coords[1]), // 이미지 지도의 중심좌표\n                level: 3, // 이미지 지도의 확대 레벨\n                marker: markers // 이미지 지도에 표시할 마커\n            };\n\n        // 이미지 지도를 생성합니다\n        var staticMap = new kakao.maps.StaticMap(staticMapContainer, staticMapOption);\n    },[kakao])\n    return(\n        <div id={`staticMap${id}`} style={{width:\"100%\",height:\"100%\"}}></div>\n    )};\n\nexport default StaticMap;","/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js",[],"/Users/ictus/project1/notice-board/client/src/components/Review/ReviewAll.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/ShopAll.js",[],"/Users/ictus/project1/notice-board/client/src/components/Board/BoardItem.js",[],"/Users/ictus/project1/notice-board/client/src/components/Board/Board.js",["140"],"import React, {useCallback, useEffect, useState} from 'react';\nimport styles from \"../../routes/Snack/snack.module.css\";\nimport BoardItem from \"./BoardItem\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport Paging from \"../Paging/Paging\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst Board = ({user, authService, boardService, setBanner, setIsAlert}) => {\n    const [isAuth, setIsAuth] = useState(undefined)\n    const [writing, setWriting] = useState(false)\n    const [viewContent,setViewContent] = useState([])\n    const [page, setPage] = useState(1)\n    const navigate = useNavigate();\n    const itemsPerPage = 12\n    const onWriteClick = () => {\n        setWriting(prev=>!prev)\n    }\n    const pagination = (array, page, itemsPerPage) =>\n        array.slice((page-1)*itemsPerPage, (page-1)*itemsPerPage+itemsPerPage)\n\n    // 게시판 가져오기\n    const getBoards = useCallback(async() => {\n        const response = await boardService.getBoard()\n        return setViewContent(prev=> [...response])\n    },[boardService])\n\n    useEffect(()=>{\n        authService.me().catch(err => navigate('/'))\n    },[authService,navigate])\n\n    useEffect( ()=>{\n        getBoards()\n        setIsAuth(prev=>user)\n    },[getBoards,user])\n\n    return(\n        <main className={styles.main}>\n            <section className={styles.section}>\n                <>\n                    <ul className={styles.list}>\n                        {pagination(viewContent, page, itemsPerPage).map((content,index) =>\n                            <li key={index} className={styles.item}>\n                                <BoardItem content={content} />\n                            </li>\n                        )}\n                    </ul>\n                    { writing && <TextEditor\n                        isEdit={false}\n                        onWriteClick={onWriteClick}\n                        boardService={boardService}\n                        getBoards={getBoards}\n                        user={user}\n                        setBanner={setBanner}\n                        setIsAlert={setIsAlert}/> }\n                    { !writing && <div className=\"btnContainer noBorder\">\n                        <button className={styles.btn} onClick={onWriteClick}>글 작성하기</button>\n                    </div>}\n                    <Paging page={page} setPage={setPage} totalCount={viewContent.length} itemsPerPage={itemsPerPage}/>\n                </>\n            </section>\n        </main>\n)};\n\nexport default Board;","/Users/ictus/project1/notice-board/client/src/components/Rate/Rate.js",[],"/Users/ictus/project1/notice-board/client/src/service/board.js",[],{"ruleId":"141","severity":1,"message":"142","line":4,"column":24,"nodeType":"143","messageId":"144","endLine":4,"endColumn":28},{"ruleId":"141","severity":1,"message":"145","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":13},{"ruleId":"141","severity":1,"message":"146","line":19,"column":12,"nodeType":"143","messageId":"144","endLine":19,"endColumn":18},{"ruleId":"141","severity":1,"message":"147","line":21,"column":12,"nodeType":"143","messageId":"144","endLine":21,"endColumn":16},{"ruleId":"141","severity":1,"message":"148","line":21,"column":18,"nodeType":"143","messageId":"144","endLine":21,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":37,"column":7,"nodeType":"151","endLine":37,"endColumn":9,"suggestions":"152"},{"ruleId":"141","severity":1,"message":"153","line":14,"column":20,"nodeType":"143","messageId":"144","endLine":14,"endColumn":29},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"141","severity":1,"message":"158","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":13},{"ruleId":"141","severity":1,"message":"158","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"159","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"145","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"160","line":53,"column":8,"nodeType":"151","endLine":53,"endColumn":14,"suggestions":"161"},{"ruleId":"149","severity":1,"message":"162","line":20,"column":7,"nodeType":"151","endLine":20,"endColumn":9,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"159","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"164","line":25,"column":13,"nodeType":"143","messageId":"144","endLine":25,"endColumn":22},{"ruleId":"149","severity":1,"message":"165","line":26,"column":7,"nodeType":"151","endLine":26,"endColumn":14,"suggestions":"166"},{"ruleId":"141","severity":1,"message":"146","line":9,"column":12,"nodeType":"143","messageId":"144","endLine":9,"endColumn":18},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'isAuth' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUser' and 'user'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsAuth' needs the current value of 'user'.","ArrayExpression",["167"],"'setRating' is assigned a value but never used.","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'kakao.maps.InfoWindow', 'kakao.maps.LatLng', 'kakao.maps.LatLngBounds', 'kakao.maps.Map', 'kakao.maps.Marker', 'kakao.maps.event', 'kakao.maps.services.Places', and 'kakao.maps.services.Status.OK'. Either include them or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'getBoards'. Either include it or remove the dependency array.",["171"],"'staticMap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coords', 'id', and 'name'. Either include them or remove the dependency array.",["172"],{"desc":"173","fix":"174"},"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [getUser, user]",{"range":"181","text":"182"},"Update the dependencies array to be: [id, kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, name]",{"range":"183","text":"184"},"Update the dependencies array to be: [getBoards]",{"range":"185","text":"186"},"Update the dependencies array to be: [coords, id, kakao, name]",{"range":"187","text":"188"},[1304,1306],"[getUser, user]",[1827,1833],"[id, kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, name]",[783,785],"[getBoards]",[886,893],"[coords, id, kakao, name]"]