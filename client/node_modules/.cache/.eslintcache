[{"/Users/ictus/project1/notice-board/client/src/index.js":"1","/Users/ictus/project1/notice-board/client/src/App.js":"2","/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js":"3","/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js":"4","/Users/ictus/project1/notice-board/client/src/components/Board/Board.js":"5","/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js":"6","/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js":"7","/Users/ictus/project1/notice-board/client/src/routes/NotFound/NotFound.js":"8"},{"size":196,"mtime":1636591310914,"results":"9","hashOfConfig":"10"},{"size":753,"mtime":1636961592768,"results":"11","hashOfConfig":"10"},{"size":2625,"mtime":1636961458937,"results":"12","hashOfConfig":"10"},{"size":3031,"mtime":1636961494543,"results":"13","hashOfConfig":"10"},{"size":1386,"mtime":1636963090223,"results":"14","hashOfConfig":"10"},{"size":1472,"mtime":1636962424012,"results":"15","hashOfConfig":"10"},{"size":672,"mtime":1636961592762,"results":"16","hashOfConfig":"10"},{"size":109,"mtime":1636703465915,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ryfszt",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ictus/project1/notice-board/client/src/index.js",[],["36","37"],"/Users/ictus/project1/notice-board/client/src/App.js",[],"/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js",["38"],"import React, {useState} from 'react';\nimport Axios from \"axios\";\nimport HTMLReactParser from \"html-react-parser\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from './selected.module.css';\n\nconst Selected = ({selected}) => {\n    const [editing, setEditing] = useState(false);\n    const navigate = useNavigate();\n\n    // Edit\n    const onEditClick = (event) => {\n        setEditing(prev => !prev)\n    }\n\n    // Delete\n    const onDeleteClick =(event)=>{\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if(ok){\n            const {target:{id}} = event;\n            Axios.post(`http://localhost:8080/api/delete/${id}`)\n                .then(() => {\n                    navigate('/')\n                    alert('삭제되었습니다.')\n                })\n        }\n    }\n\n    // Time Formatter\n    const timeFormatter = (createdAt) => {\n        const milliSeconds = new Date() - new Date(createdAt);\n        const seconds = milliSeconds / 1000;\n        if (seconds < 60) return `방금 전`;\n        const minutes = seconds / 60;\n        if (minutes < 60) return `${Math.floor(minutes)}분 전`;\n        const hours = minutes / 60;\n        if (hours < 24) return `${Math.floor(hours)}시간 전`;\n        const days = hours / 24;\n        if (days < 2) return `${Math.floor(days)}일 전`;\n        if (days >= 2) {\n            const dateObj = new Date(createdAt);\n            const year = dateObj.getFullYear();\n            const month = dateObj.getMonth() + 1;\n            const date = dateObj.getDate();\n            return `${year}년 ${month}월 ${date}일`;\n        }\n    };\n\n    return(\n        <main>\n            { !editing ?\n                <section>\n                    <header>\n                        <h1>{selected.title}</h1>\n                    </header>\n                    <div>\n                        <div>\n                            <small>{timeFormatter(selected.date)}</small>\n                        </div>\n                        <div>\n                            {HTMLReactParser(selected.text)}\n                        </div>\n                    </div>\n                    <div>\n                        <button id={selected.id} onClick={onDeleteClick}>글 삭제하기</button>\n                    </div>\n                </section> :\n                <section>\n                    <TextEditor isEdit={true} selected={selected} />\n                </section>\n            }\n            <button onClick={onEditClick}>{editing ? \"취소\" : \"글 수정하기\" }</button>\n        </main>\n    )\n};\n\nexport default Selected;","/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js",["39","40"],"/Users/ictus/project1/notice-board/client/src/components/Board/Board.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js",["41"],"/Users/ictus/project1/notice-board/client/src/routes/NotFound/NotFound.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":14},{"ruleId":"46","severity":1,"message":"47","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":57,"column":7,"nodeType":"52","endLine":57,"endColumn":9,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":13,"column":7,"nodeType":"52","endLine":13,"endColumn":11,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isEdit' and 'selected'. Either include them or remove the dependency array. If 'setContent' needs the current value of 'selected', you can also switch to useReducer instead of useState and read 'selected' in the reducer.","ArrayExpression",["58"],"React Hook useEffect has a missing dependency: 'viewContent'. Either include it or remove the dependency array. If 'setSelected' needs the current value of 'viewContent', you can also switch to useReducer instead of useState and read 'viewContent' in the reducer.",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [isEdit, selected]",{"range":"64","text":"65"},"Update the dependencies array to be: [id, viewContent]",{"range":"66","text":"67"},[1511,1513],"[isEdit, selected]",[492,496],"[id, viewContent]"]