[{"/Users/ictus/project1/notice-board/client/src/index.js":"1","/Users/ictus/project1/notice-board/client/src/App.js":"2","/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js":"3","/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js":"4","/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js":"5","/Users/ictus/project1/notice-board/client/src/components/Navigation/Navigation.js":"6","/Users/ictus/project1/notice-board/client/src/components/Auth/Auth.js":"7","/Users/ictus/project1/notice-board/client/src/service/auth.js":"8","/Users/ictus/project1/notice-board/client/src/db/token.js":"9","/Users/ictus/project1/notice-board/client/src/components/Banner/Banner.js":"10","/Users/ictus/project1/notice-board/client/src/util/date.js":"11","/Users/ictus/project1/notice-board/client/src/components/Paging/Paging.js":"12","/Users/ictus/project1/notice-board/client/src/components/Map/MapContainer.js":"13","/Users/ictus/project1/notice-board/client/src/components/Map/SearchPlace.js":"14","/Users/ictus/project1/notice-board/client/src/util/GlobalStyles.js":"15","/Users/ictus/project1/notice-board/client/src/routes/Snack/Snack.js":"16","/Users/ictus/project1/notice-board/client/src/routes/Gourmet/Gourmet.js":"17","/Users/ictus/project1/notice-board/client/src/components/Review/Review.js":"18","/Users/ictus/project1/notice-board/client/src/components/Shop/Shop.js":"19","/Users/ictus/project1/notice-board/client/src/components/LoadingSpinner/LoadingSpinner.js":"20","/Users/ictus/project1/notice-board/client/src/components/Map/StaticMap.js":"21","/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js":"22","/Users/ictus/project1/notice-board/client/src/components/Shop/ShopAll.js":"23","/Users/ictus/project1/notice-board/client/src/components/Board/BoardItem.js":"24","/Users/ictus/project1/notice-board/client/src/components/Board/Board.js":"25","/Users/ictus/project1/notice-board/client/src/components/Rate/Rate.js":"26","/Users/ictus/project1/notice-board/client/src/service/board.js":"27","/Users/ictus/project1/notice-board/client/src/components/Shop/ShopDetail.js":"28","/Users/ictus/project1/notice-board/client/src/components/Review/ReviewItem.js":"29"},{"size":596,"mtime":1640739610157,"results":"30","hashOfConfig":"31"},{"size":3888,"mtime":1642567486716,"results":"32","hashOfConfig":"31"},{"size":6407,"mtime":1641970949566,"results":"33","hashOfConfig":"31"},{"size":8123,"mtime":1642573905783,"results":"34","hashOfConfig":"31"},{"size":1341,"mtime":1641957340122,"results":"35","hashOfConfig":"31"},{"size":2004,"mtime":1641974236543,"results":"36","hashOfConfig":"31"},{"size":3425,"mtime":1640745366312,"results":"37","hashOfConfig":"31"},{"size":1272,"mtime":1640746760516,"results":"38","hashOfConfig":"31"},{"size":282,"mtime":1640741407218,"results":"39","hashOfConfig":"31"},{"size":322,"mtime":1638168262305,"results":"40","hashOfConfig":"31"},{"size":759,"mtime":1638228598697,"results":"41","hashOfConfig":"31"},{"size":545,"mtime":1640044390277,"results":"42","hashOfConfig":"31"},{"size":12991,"mtime":1642575139056,"results":"43","hashOfConfig":"31"},{"size":1411,"mtime":1642573961113,"results":"44","hashOfConfig":"31"},{"size":2555,"mtime":1642575624530,"results":"45","hashOfConfig":"31"},{"size":387,"mtime":1641974375285,"results":"46","hashOfConfig":"31"},{"size":1630,"mtime":1642567394317,"results":"47","hashOfConfig":"31"},{"size":2459,"mtime":1642567394331,"results":"48","hashOfConfig":"31"},{"size":1807,"mtime":1642567394300,"results":"49","hashOfConfig":"31"},{"size":344,"mtime":1640221108667,"results":"50","hashOfConfig":"31"},{"size":1189,"mtime":1642567394310,"results":"51","hashOfConfig":"31"},{"size":730,"mtime":1642046662330,"results":"52","hashOfConfig":"31"},{"size":388,"mtime":1642567394263,"results":"53","hashOfConfig":"31"},{"size":809,"mtime":1641473719667,"results":"54","hashOfConfig":"31"},{"size":4251,"mtime":1642574411147,"results":"55","hashOfConfig":"31"},{"size":1111,"mtime":1641965151391,"results":"56","hashOfConfig":"31"},{"size":1774,"mtime":1641954720295,"results":"57","hashOfConfig":"31"},{"size":1426,"mtime":1642567394321,"results":"58","hashOfConfig":"31"},{"size":939,"mtime":1642567394274,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19yhmvx",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"67"},"/Users/ictus/project1/notice-board/client/src/index.js",[],"/Users/ictus/project1/notice-board/client/src/App.js",["127","128"],"/Users/ictus/project1/notice-board/client/src/components/Selected/Selected.js",["129","130","131"],"import React, {useCallback, useEffect, useState} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport HTMLReactParser from \"html-react-parser\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport timeFormatter from \"../../util/date\";\nimport styles from './selected.module.css';\nimport ReviewItem from \"../Review/ReviewItem\";\nimport Rate from \"../Rate/Rate\";\nimport {faPhoneAlt, faMapMarkerAlt, faLink} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Selected = ({selected, isOwner, setBanner, authService, boardService, setIsAlert, user, shopReviews, getReviews}) => {\n    const [editing, setEditing] = useState(false);\n    const [rating, setRating] = useState(0)\n    const isSnack = window.location.href.includes('snack')\n    const isReview = window.location.href.includes('reviews')\n    const isShop = window.location.href.includes('shops')\n    const navigate = useNavigate();\n    // Edit\n    const onEditClick = (event) => {\n        if(isOwner || isReview || isShop){\n            setEditing(prev => !prev)\n        }\n    }\n    // Delete\n    const onDeleteClick =(event)=>{\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if(ok){\n            const {target:{id}} = event;\n            boardService.deleteBoard(id)\n                .catch(err=>setBanner(err.response.data.message))\n                .then(navigate(-1))\n        }\n    }\n    // 별점 평균 구하기\n    const average = (arr) => {\n        const value = arr.reduce((p, c) => p + c, 0) / arr.length\n        if(value){\n            return setRating(value)\n        }\n    }\n    useEffect(()=>{\n        if(shopReviews){\n            average(shopReviews.map(review=>review.rate))\n        }\n    })\n    return(\n        <main>\n            {/*Section*/}\n            <section className={styles.section}>\n                {!editing && <>\n                    <header className={styles.header}>\n                        <h1 className={styles.title}>\n                            {selected.title}\n                            {!isSnack &&\n                            <Rate value={rating}/>}\n                        </h1>\n                        {isShop && <button className={styles.btn} onClick={onEditClick}>리뷰 추가</button>}\n                    </header>\n                    <div className={styles.meta}>\n                        <div className={styles.date}><small>{timeFormatter(selected.date)}</small></div>\n                        <div className={styles.username}><small>{selected.username}</small></div>\n                    </div>\n                    <div className={`${styles.text} ${(isReview || shopReviews) && styles.reviewsContainer}`}>\n                        {isReview ?\n                            <ul className={styles.list}>\n                                {shopReviews.map((content,index) =>\n                                    <li key={index} className={styles.item}>\n                                        <ReviewItem content={content} user={user} onDeleteClick={onDeleteClick} isOwner={true} />\n                                    </li>\n                                )}\n                            </ul> :\n                            HTMLReactParser(selected.text || '')}\n                        {shopReviews &&\n                        <div>\n                            <div className={styles.info}>\n                                <span>\n                                    <FontAwesomeIcon\n                                        icon={faMapMarkerAlt}\n                                        style={{marginRight:'4px'}}\n                                    />\n                                    {selected.address}\n                                </span>\n                                <span>\n                                    <FontAwesomeIcon\n                                        icon={faPhoneAlt}\n                                        style={{marginRight:'4px'}}\n                                    />\n                                    {selected.phone}\n                                </span>\n                                <a href={selected.url} target='_blank'>\n                                    <FontAwesomeIcon\n                                        icon={faLink}\n                                        style={{marginRight:'4px', color:'#000',}}\n                                    />\n                                    카카오맵에서 보기\n                                </a>\n                            </div>\n                            <h2>후기</h2>\n                            <ul className={styles.list}>\n                                {shopReviews.map((content,index) =>\n                                    <li key={index} className={styles.item}>\n                                        <ReviewItem\n                                            content={content}\n                                            user={user}\n                                            onDeleteClick={onDeleteClick}\n                                            isOwner={content.isOwner}\n                                        />\n                                    </li>\n                                )}\n                            </ul>\n                        </div>\n                        }\n                    </div>\n                    { selected.isOwner &&\n                    <div className=\"btnContainer\">\n                        { isSnack && <button className={styles.btn} onClick={onEditClick}>{editing ? \"취소\" : \"글 수정하기\"}</button>}\n                        <button className={styles.btn} id={selected.id} onClick={onDeleteClick}>{ isShop ? \"맛집 삭제하기\" : \"글 삭제하기\"}</button>\n                    </div>\n                    }\n                </>\n                }\n                {editing &&\n                <TextEditor\n                    isEdit={true}\n                    isReview={isReview}\n                    selected={selected}\n                    keyword={selected.title}\n                    boardService={boardService}\n                    onCancelClick={onEditClick}\n                    onEditClick={onEditClick}\n                    setBanner={setBanner}\n                    setIsAlert={setIsAlert}\n                    getReviews={getReviews}\n                />\n                }\n            </section>\n        </main>\n    )\n};\n\nexport default Selected;",["132","133"],"/Users/ictus/project1/notice-board/client/src/components/TextEditor/TextEditor.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Read/Read.js",[],"/Users/ictus/project1/notice-board/client/src/components/Navigation/Navigation.js",["134","135"],"import React, {useEffect, useState} from 'react';\nimport styles from './navigation.module.css';\nimport {Link, useNavigate} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faCookieBite, faMapMarkerAlt,faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({authService,user}) => {\n    const navigate = useNavigate()\n    const goBack = () => {\n        navigate(-1)\n    }\n    const isGourmet = window.location.href.includes('gourmet')\n    const isSnack = window.location.href.includes('snack')\n    const onLogout = () =>{\n        authService.logout()\n        window.location.reload();\n    }\n    \n\n    return(\n        <nav id='navbar' className={styles.nav}>\n            <ul className={styles.navList}>\n                { window.location.pathname === \"/\" ||\n                <li className={styles.navListItem} onClick={goBack}>\n                    <FontAwesomeIcon icon={faChevronLeft}/>\n                    <span className={styles.hoverText}>뒤로</span>\n                </li>}\n                <Link to={'/snack'}>\n                    <li className={`${styles.navListItem} ${isSnack && styles.active}`}><FontAwesomeIcon icon={faCookieBite}/>\n                        <span className={styles.hoverText}>간식</span>\n                    </li>\n                </Link>\n                <Link to={'/gourmet'}>\n                    <li className={`${styles.navListItem} ${isGourmet && styles.active}`}><FontAwesomeIcon icon={faMapMarkerAlt}/>\n                        <span className={styles.hoverText}>맛집</span>\n                    </li>\n                </Link>\n                { user &&\n                <li className={`${styles.navListItem} ${styles.logout}`} onClick={onLogout}>\n                    <span className={styles.hoverText}>로그아웃</span>\n                    <FontAwesomeIcon icon={faSignOutAlt}/>\n                </li>\n                }\n            </ul>\n        </nav>\n    );\n}\n\nexport default Navigation;","/Users/ictus/project1/notice-board/client/src/components/Auth/Auth.js",["136"],"import React, {useState} from 'react';\nimport styles from './auth.module.css';\nimport Axios from \"axios\";\n\nconst Auth = ({setIsAuth, authService ,setBanner, setIsAlert}) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"username\") {\n            setUsername(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    // 로그인\n    const onLogin = async (event) => {\n        event.preventDefault();\n        try {\n            await authService.login(username, password)\n            authService.me()\n                .then(result=>setIsAuth(result.data))\n                .catch(console.error);\n        } catch (error) {\n            setIsAlert(true)\n            setBanner(error.response.data.message)\n        }\n    };\n\n    // 회원가입\n    const onJoin = async ()=>{\n        try {\n            await authService.signup(username, password)\n            setIsAlert(false)\n            setBanner(`${username}님, 가입되었습니다.`)\n            setUsername(username)\n            setPassword(\"\")\n        } catch (error) {\n            setIsAlert(true)\n            setBanner(error.response.data.message)\n        }\n    }\n\n    return (\n        <>\n            <div className={styles.container}>\n                <div className={styles.authContainer}>\n                    <div className={styles.formContainer}>\n                        <form className={styles.form} onSubmit={onLogin}>\n                            <div className={styles.inputContainer}>\n                                <input\n                                    className={styles.input}\n                                    name=\"username\"\n                                    type=\"text\"\n                                    required\n                                    value={username}\n                                    onChange={onChange}\n                                />\n                                <span className={styles.placeholder}>이름</span>\n                            </div>\n                            <div className={styles.inputContainer}>\n                                <input\n                                    className={styles.input}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    required\n                                    value={password}\n                                    onChange={onChange}\n                                />\n                                <span className={styles.placeholder}>비밀번호</span>\n                            </div>\n                            <div className={styles.formBtnContainer}>\n                                <input\n                                    className={styles.submitBtn}\n                                    type=\"submit\"\n                                    value=\"로그인\"\n                                />\n                                <span onClick={onJoin} className={styles.switch}>\n                                    회원가입\n                                </span>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Auth;","/Users/ictus/project1/notice-board/client/src/service/auth.js",[],"/Users/ictus/project1/notice-board/client/src/db/token.js",[],"/Users/ictus/project1/notice-board/client/src/components/Banner/Banner.js",[],"/Users/ictus/project1/notice-board/client/src/util/date.js",[],"/Users/ictus/project1/notice-board/client/src/components/Paging/Paging.js",[],"/Users/ictus/project1/notice-board/client/src/components/Map/MapContainer.js",["137","138","139","140"],"/Users/ictus/project1/notice-board/client/src/components/Map/SearchPlace.js",[],"/Users/ictus/project1/notice-board/client/src/util/GlobalStyles.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Snack/Snack.js",[],"/Users/ictus/project1/notice-board/client/src/routes/Gourmet/Gourmet.js",[],"/Users/ictus/project1/notice-board/client/src/components/Review/Review.js",["141","142","143"],"import React, {useState} from 'react';\nimport Slider from \"react-slick\";\nimport {Link} from \"react-router-dom\";\nimport Rate from \"../Rate/Rate\";\nimport styles from \"../../routes/Gourmet/gourmet.module.css\";\nimport timeFormatter from \"../../util/date\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport HTMLReactParser from \"html-react-parser\";\n\nconst Review = ({reviews, boardService, setBanner, setIsAlert}) => {\n    const [isWrite, setIsWrite] = useState(false)\n    const settings = {\n        dots: true,\n        arrows: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 4,\n        slidesToScroll: 1,\n        responsive: [\n            {\n                breakpoint: 1025,\n                settings: {\n                    slidesToShow: 3,\n                }\n            },\n            {\n                breakpoint: 768,\n                settings: {\n                    slidesToShow: 2,\n                }\n            },\n            {\n                breakpoint: 426,\n                settings: {\n                    slidesToShow: 1,\n                }\n            }\n        ]\n    }\n    const onWriteClick = () => {\n        setIsWrite(prev => !prev)\n    }\n    return (\n        <div className={styles.slick}>\n            <h2 className={styles.slickTitle}>최근 등록 리뷰</h2>\n            <div className={styles.buttonContainer}>\n                <Link to='./shops'>\n                    <button>전체보기 / 등록하기</button>\n                </Link>\n            </div>\n            <span className={styles.caption}>리뷰 클릭시 가게 정보로 이동합니다.</span>\n            <Slider {...settings}>\n                {reviews.slice(0, 6).map((review) =>\n                    <Link to={`./shops/${review.shopId}`} key={review.id}>\n                        <div className={styles.slickItem}>\n                            <h2 className={styles.reviewText}>{HTMLReactParser(review.text)}</h2>\n                            <Rate value={review.rate} size={'lg'}/>\n                            <div className={styles.reviewMeta}>\n                                <span>{timeFormatter(review.date)}</span>\n                                <span>{review.username}</span>\n                            </div>\n                            <span className={styles.hoverBtn}>리뷰 보기</span>\n                        </div>\n                    </Link>\n                )}\n            </Slider>\n        </div>\n\n    )\n};\n\nexport default Review;","/Users/ictus/project1/notice-board/client/src/components/Shop/Shop.js",["144"],"import React, {useState} from 'react';\nimport StaticMap from \"../Map/StaticMap\";\nimport styles from \"../../routes/Gourmet/gourmet.module.css\";\nimport Slider from \"react-slick\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Shop = ({data}) => {\n    const settings = {\n        dots: true,\n        arrows: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 4,\n        slidesToScroll: 1,\n        responsive: [\n            {\n                breakpoint: 1025,\n                settings: {\n                    slidesToShow: 3,\n                }\n            },\n            {\n                breakpoint: 768,\n                settings: {\n                    slidesToShow: 2,\n                }\n            },\n            {\n                breakpoint: 426,\n                settings: {\n                    slidesToShow: 1,\n                }\n            }\n        ]\n    };\n    return (\n        <div className={styles.slick}>\n            <h2 className={styles.slickTitle}>최근 등록 맛집</h2>\n            <div className={styles.buttonContainer}>\n                <Link to='./shops'>\n                    <button>전체보기 / 등록하기</button>\n                </Link>\n            </div>\n            <span className={styles.caption}>지도 클릭시 카카오 맵으로 이동합니다.</span>\n            <Slider {...settings}>\n                {data.slice(0, 6).map((shop) =>\n                    <div className={styles.slickItem} key={shop.id}>\n                        <div className={styles.shopsTitle}>\n                            <h2 className={styles.shopsTitle}>{shop.title}</h2>\n                        </div>\n                        <StaticMap shop={shop} key={shop.id}/>\n                    </div>\n                )}\n            </Slider>\n        </div>\n    )\n};\n\nexport default Shop;","/Users/ictus/project1/notice-board/client/src/components/LoadingSpinner/LoadingSpinner.js",[],"/Users/ictus/project1/notice-board/client/src/components/Map/StaticMap.js",["145","146"],"import React, {useEffect} from 'react';\n\n\nconst StaticMap = ({shop: {id, coords, title}}) => {\n    const {kakao} = window;\n    useEffect(() => {\n        var markers = [\n            {\n                position: new kakao.maps.LatLng(parseFloat(coords.split(',')[1]), parseFloat(coords.split(',')[0])),\n                text: title // text 옵션을 설정하면 마커 위에 텍스트를 함께 표시할 수 있습니다\n            }\n        ];\n        var staticMapContainer = document.getElementById(`staticMap${id}`), // 이미지 지도를 표시할 div\n            staticMapOption = {\n                center: new kakao.maps.LatLng(parseFloat(coords.split(',')[1]), parseFloat(coords.split(',')[0])),\n                // 이미지 지도의 중심좌표\n                level: 4, // 이미지 지도의 확대 레벨\n                marker: markers, // 이미지 지도에 표시할 마커\n            };\n\n        // 이미지 지도를 생성합니다\n        var staticMap = new kakao.maps.StaticMap(staticMapContainer, staticMapOption);\n    }, [kakao])\n    return (\n        <div id={`staticMap${id}`} style={{width: \"100%\", height: \"100%\"}}></div>\n    )\n};\n\nexport default StaticMap;","/Users/ictus/project1/notice-board/client/src/routes/Home/Home.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/ShopAll.js",[],"/Users/ictus/project1/notice-board/client/src/components/Board/BoardItem.js",[],"/Users/ictus/project1/notice-board/client/src/components/Board/Board.js",["147"],"/Users/ictus/project1/notice-board/client/src/components/Rate/Rate.js",[],"/Users/ictus/project1/notice-board/client/src/service/board.js",[],"/Users/ictus/project1/notice-board/client/src/components/Shop/ShopDetail.js",["148"],"import React, {useCallback, useEffect, useState} from 'react';\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport Selected from \"../Selected/Selected\";\n\nconst ShopDetail = ({shops, user, authService, boardService}) => {\n    const [shop, setShop] = useState({})\n    const [reviews, setReviews] = useState([])\n    const [isOwner, setIsOwner] = useState(false)\n    const {id} = useParams()\n    const navigate = useNavigate()\n\n    // 해당 가게의 리뷰 가져오기\n    const getReviews = useCallback(async (id) => {\n        const response = await boardService.getReviews(id)\n        return setReviews(response)\n    }, [boardService])\n\n    // 해당 가게 정보 가져오기\n    const getShopDetail = useCallback(async (id) => {\n        const response = await boardService.getBoard(id)\n        return setShop(prev => response)\n    }, [boardService])\n\n    useEffect(() => {\n        getShopDetail(id)\n        getReviews(id)\n    }, [getShopDetail, id, getReviews, user])\n\n    // 로그인 확인\n    useEffect(() => {\n        authService.me().catch(err => navigate('/'))\n    }, [authService, navigate])\n\n\n    return (\n        <Selected\n            boardService={boardService}\n            authService={authService}\n            isOwner={isOwner}\n            selected={shop}\n            shopReviews={reviews}\n            user={user}\n            getReviews={getReviews}\n        />\n    )\n};\n\nexport default ShopDetail;","/Users/ictus/project1/notice-board/client/src/components/Review/ReviewItem.js",["149","150"],"import React, {useEffect, useState} from 'react';\nimport timeFormatter from \"../../util/date\";\nimport Rate from \"../Rate/Rate\";\nimport HTMLReactParser from \"html-react-parser\";\nimport styles from './review.module.css';\n\nconst ReviewItem = ({content, user, onDeleteClick, isOwner}) => {\n    return (\n        <div className={styles.container}>\n            <div className={styles.title}>\n                {HTMLReactParser(content.text)}\n                {isOwner &&\n                <div className={styles.btnContainer}>\n                    <button className={styles.btn} id={content.id} onClick={onDeleteClick}>글 삭제하기</button>\n                </div>}\n            </div>\n            <div className={styles.meta}>\n                <Rate value={content.rate}/>\n                <span>{timeFormatter(content.date)}</span>\n                <span>{content.username}</span>\n            </div>\n        </div>\n    )\n};\n\nexport default ReviewItem;",{"ruleId":"151","severity":1,"message":"152","line":18,"column":12,"nodeType":"153","messageId":"154","endLine":18,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":34,"column":8,"nodeType":"157","endLine":34,"endColumn":10,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"159","line":1,"column":16,"nodeType":"153","messageId":"154","endLine":1,"endColumn":27},{"ruleId":"151","severity":1,"message":"160","line":5,"column":22,"nodeType":"153","messageId":"154","endLine":5,"endColumn":31},{"ruleId":"161","severity":1,"message":"162","line":91,"column":33,"nodeType":"163","messageId":"164","endLine":91,"endColumn":72,"fix":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"151","severity":1,"message":"170","line":1,"column":16,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"171","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":35},{"ruleId":"151","severity":1,"message":"172","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":13},{"ruleId":"151","severity":1,"message":"173","line":54,"column":21,"nodeType":"153","messageId":"154","endLine":54,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":76,"column":22,"nodeType":"176","messageId":"177","endLine":92,"endColumn":22},{"ruleId":"151","severity":1,"message":"178","line":211,"column":22,"nodeType":"153","messageId":"154","endLine":211,"endColumn":35},{"ruleId":"155","severity":1,"message":"179","line":277,"column":8,"nodeType":"157","endLine":277,"endColumn":335,"suggestions":"180"},{"ruleId":"151","severity":1,"message":"181","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":18},{"ruleId":"151","severity":1,"message":"182","line":11,"column":12,"nodeType":"153","messageId":"154","endLine":11,"endColumn":19},{"ruleId":"151","severity":1,"message":"183","line":40,"column":11,"nodeType":"153","messageId":"154","endLine":40,"endColumn":23},{"ruleId":"151","severity":1,"message":"171","line":1,"column":16,"nodeType":"153","messageId":"154","endLine":1,"endColumn":24},{"ruleId":"151","severity":1,"message":"184","line":22,"column":13,"nodeType":"153","messageId":"154","endLine":22,"endColumn":22},{"ruleId":"155","severity":1,"message":"185","line":23,"column":8,"nodeType":"157","endLine":23,"endColumn":15,"suggestions":"186"},{"ruleId":"151","severity":1,"message":"152","line":10,"column":12,"nodeType":"153","messageId":"154","endLine":10,"endColumn":18},{"ruleId":"151","severity":1,"message":"187","line":8,"column":21,"nodeType":"153","messageId":"154","endLine":8,"endColumn":31},{"ruleId":"151","severity":1,"message":"170","line":1,"column":16,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"171","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":35},"no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUser' and 'user'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsAuth' needs the current value of 'user'.","ArrayExpression",["188"],"'useCallback' is defined but never used.","'useParams' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"189","text":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'listStr' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'itemEl', 'itemEl'.","FunctionExpression","unsafeRefs","'displayMarker' is defined but never used.","React Hook useEffect has missing dependencies: 'boardService', 'kakao.maps.ControlPosition.RIGHT', 'kakao.maps.Point', 'kakao.maps.services.Status.ERROR', and 'kakao.maps.services.Status.ZERO_RESULT'. Either include them or remove the dependency array.",["193"],"'TextEditor' is defined but never used.","'isWrite' is assigned a value but never used.","'onWriteClick' is assigned a value but never used.","'staticMap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coords', 'id', and 'title'. Either include them or remove the dependency array.",["194"],"'setIsOwner' is assigned a value but never used.",{"desc":"195","fix":"196"},[4127,4127]," rel=\"noreferrer\"","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [getUser, user]",{"range":"201","text":"202"},"Update the dependencies array to be: [keyword, titleAndCoords, kakao.maps.ControlPosition.LEFT, kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.MarkerImage, kakao.maps.Size, kakao.maps.ZoomControl, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, setKeyword, setPlaceObj, kakao.maps.ControlPosition.RIGHT, kakao.maps.services.Status.ZERO_RESULT, kakao.maps.services.Status.ERROR, kakao.maps.Point, boardService]",{"range":"203","text":"204"},"Update the dependencies array to be: [coords, id, kakao, title]",{"range":"205","text":"206"},[1236,1238],"[getUser, user]",[10638,10965],"[keyword, titleAndCoords, kakao.maps.ControlPosition.LEFT, kakao.maps.InfoWindow, kakao.maps.LatLng, kakao.maps.LatLngBounds, kakao.maps.Map, kakao.maps.Marker, kakao.maps.MarkerImage, kakao.maps.Size, kakao.maps.ZoomControl, kakao.maps.event, kakao.maps.services.Places, kakao.maps.services.Status.OK, setKeyword, setPlaceObj, kakao.maps.ControlPosition.RIGHT, kakao.maps.services.Status.ZERO_RESULT, kakao.maps.services.Status.ERROR, kakao.maps.Point, boardService]",[898,905],"[coords, id, kakao, title]"]